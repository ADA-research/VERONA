name: Pytest with Coverage

on:
  push:
    branches: [ "main" ]
  pull_request:
      branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
        
            - name: Set up Miniconda
              uses: conda-incubator/setup-miniconda@v3
              with:
                activate-environment: verona  
                python-version: "3.10"  
                auto-activate-base: false
        
            - name: Install uv
              run: |
                conda run -n verona pip install uv
        
            - name: Install dependencies with uv
              run: |
                conda run -n verona uv pip install -r requirements.txt
        
            - name: Install local package
              run: |
                conda run -n verona uv pip install -e .
                
            - name: Install pytest, pytest-mock and pytest-cov
              run: |
                conda run -n verona uv pip install pytest pytest-mock pytest-cov

            - name: Install AutoAttack
              run: |
                conda run -n verona pip install git+https://github.com/fra31/auto-attack
        
            - name: Install AutoVerify
              run: |
                conda run -n verona pip install auto-verify==0.1.4
        
            - name: Run pytest with coverage
              run: |
                conda run -n verona coverage run -m pytest tests/ --verbose 

            - name: Extract coverage percentage
              id: coverage
              run: |
                COVERAGE_LINE=$(conda run -n verona coverage report | grep TOTAL)
                COVERAGE=$(echo $COVERAGE_LINE | awk '{print $NF}' | tr -d '%')
                echo "Coverage is $COVERAGE%"
                echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT
            - name: Create coverage badge JSON
              run: |
                echo "{ \"schemaVersion\": 1, \"label\": \"coverage\", \"message\": \"${{ steps.coverage.outputs.coverage }}%\", \"color\": \"green\" }" > coverage-badge.json
           

            - name: Make the json coverage badge and add to the repo
              if: github.ref == 'refs/heads/main'
              run: |
                git config user.name "github-actions[bot]"
                git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
                git add coverage-badge.json
                git commit -m "Update coverage badge" || echo "No changes to commit"
                git push