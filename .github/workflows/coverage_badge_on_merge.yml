name: Pytest with Coverage

on:
  push:
    branches: ["main", "coverage-repair"]
  pull_request:
      branches: ["main", "coverage-repair"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
    test:
        runs-on: ubuntu-latest
        permissions:
          id-token: write
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
        
            - name: Set up uv
              uses: astral-sh/setup-uv@v2
            
            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                python-version: "3.10"
        
            - name: Cache uv dependencies
              uses: actions/cache@v4
              with:
                path: |
                  ~/.cache/uv
                  .venv
                key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
                restore-keys: |
                  uv-${{ runner.os }}-
        
            - name: Sync dependencies from uv.lock
              run: uv sync
        
            - name: Install pytest-cov
              run: |
                uv pip install pytest-cov
        
            - name: Install AutoAttack
              run: |
                uv pip install git+https://github.com/fra31/auto-attack
        
            - name: Install AutoVerify
              run: |
                uv pip install auto-verify==0.1.4
        
            - name: Run pytest with coverage
              run: |
                uv run coverage run -m pytest tests/ --cov --cov-report=xml

            - name: Upload coverage to codecov
              uses: codecov/codecov-action@main
              with:
                fail_ci_if_error: true
                token: ${{ secrets.CODECOV_TOKEN }}
                verbose: true
